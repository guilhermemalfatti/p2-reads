{"version":3,"sources":["actions/actionCreators.js","config/config.js","actions/categories.js","components/header/index.js","actions/shared.js","components/loading/index.js","components/list/index.js","actions/post.js","components/modalPost/index.js","util/index.js","components/posts/index.js","actions/comment.js","components/commentForm/index.js","components/postPage/index.js","components/App.js","reducers/comments.js","reducers/loading.js","reducers/categories.js","reducers/posts.js","reducers/index.js","middleware/index.js","index.js","components/list/voteStyle.css","components/postPage/voteStyle.css"],"names":["createActions","addPost","editPost","deletePost","upVote","downVote","voteSelectedPost","selectPost","addComment","editComment","deleteComment","getComments","initialData","requestData","dataReceived","receiveCategories","selectCategory","sortPost","updateList","Types","Creators","API_ENDPOINT","READABLE_STARTER","process","DOMAIN","token","localStorage","Math","random","toString","substr","options","headers","Authorization","Header","filter","category","filteredPosts","originalPosts","_this","props","dispatch","item","ActionCreator","_this$props","this","match","params","length","axios","get","then","res","data","catch","err","console","error","receiveInitialData","categories","alert","_this2","react_default","a","createElement","id","className","data-ride","undefined","Link","to","onClick","map","cat","path","key","concat","name","Component","connect","state","items","posts","originalList","Loading","postDate","timestamp","moment","format","List","type","Fragment","post","data-color","color","voteScore","vote","title","author","body","commentCount","index","style","green","yellow","red","src","alt","onDeleteComment","uuidv4","require","postVote","postId","option","ModalPost","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","history","editing","selectedPost","preventDefault","values","serializeForm","target","hash","put","handleHide","Date","getTime","push","handleShow","bind","assertThisInitialized","show","showAlert","showModal","event","setState","value","cancelEdit","_this$props2","_this$state","disabled","_","isEmpty","Modal_default","onHide","dialogClassName","closeButton","Title","Body","onSubmit","placeholder","onChange","handleTitleChange","handleBodyChange","handleAuthorChange","handleCategoryChange","withRouter","defineColor","votes","Posts","sortByDesc","searchValue","selectFilter","voteItem","filterList","updatedList","toLowerCase","search","resetFilter","isLoading","components_modalPost","href","components_loading","loading","CommentForm","comment","clearForm","edititngComment","commentId","newComment","cancelCommentEdit","PostsPage","delete","setEditComment","commentBeingEdited","hideComment","labelHideComment","toggleComments","commentVote","post_id","comments","components_commentForm","App","Route","component","exact","INITIAL_STATE","HANDLERS","_HANDLERS","defineProperty","GET_COMMENTS","arguments","action","objectSpread","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","DOWN_VOTE","UP_VOTE","createReducer","loadingOff","loading_HANDLERS","INITIAL_DATA","REQUEST_DATA","SELECT_POST","DATA_RECEIVED","selectedCategory","categories_HANDLERS","RECEIVE_CATEGORIES","SELECT_CATEGORY","posts_HANDLERS","ADD_POST","SORT_POST","term","sort","b","UPDATE_LIST","VOTE_SELECTED_POST","DELETE_POST","EDIT_POST","parentId","combineReducers","applyMiddleware","thunk","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","middleware","ReactDOM","render","es","BrowserRouter","basename","components_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.617a750c.chunk.js","sourcesContent":["import { createActions } from 'reduxsauce'\r\n\r\nexport const { Types, Creators } = createActions({\r\n  addPost: ['post'],\r\n  editPost: ['values', 'id'],\r\n  deletePost: ['postId'],\r\n  upVote: ['id'],\r\n  downVote: ['id'],\r\n  voteSelectedPost: ['vote'],\r\n  selectPost: ['post'],\r\n\r\n  addComment: ['comment'],\r\n  editComment: ['commentId', 'values'],\r\n  deleteComment: ['comment'],\r\n  getComments: ['comments'],\r\n\r\n  initialData: ['posts', 'filter'],\r\n  requestData: null,\r\n  dataReceived: null,\r\n\r\n  receiveCategories: ['categories'],\r\n  selectCategory: ['category'],\r\n\r\n  sortPost: ['term'],\r\n\r\n  updateList: ['posts']\r\n})\r\nexport default Creators\r\n","// contants\r\nexport const CONST = {\r\n    YES: \"YES\",\r\n    NO: \"NO\"\r\n}\r\n\r\nvar domain = process.env.DOMAIN || 'https://udacity-reads.herokuapp.com';\r\nexport const API_ENDPOINT = {\r\n    READABLE_STARTER: domain\r\n}\r\n\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nexport default token;\r\n","import axios from \"axios\";\r\nimport ActionCreator from './actionCreators';\r\nimport token from '../config/config';\r\nimport { API_ENDPOINT } from '../config/config';\r\n\r\nconst options = { headers: { \"Authorization\": token } };\r\n\r\n\r\nexport default function getCategories(postId, vote) {\r\n    return (dispatch) => {\r\n\r\n        return axios.get(\r\n            API_ENDPOINT.READABLE_STARTER + '/categories',\r\n            options)\r\n            .then((res)=>{\r\n                dispatch(ActionCreator.receiveCategories(res.data.categories));\r\n            })\r\n            .catch((err) => alert('There was an error on getCategories, the data is inconsistent, refresh the page and try again' + err))\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport getCategories from '../../actions/categories';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ActionCreator from '../../actions/actionCreators';\r\nimport receiveInitialData from '../../actions/shared';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        originalPosts: PropTypes.array.isRequired,\r\n        categories: PropTypes.array.isRequired\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { dispatch, originalPosts } = this.props\r\n        const { category } = this.props.match.params;\r\n\r\n        //in order to request initial data, only in the first time.\r\n        if (originalPosts.length === 0) {\r\n            dispatch(receiveInitialData(category));\r\n        }\r\n\r\n        dispatch(getCategories());\r\n    }\r\n\r\n    filter = (category) => {\r\n        let { originalPosts } = this.props;\r\n        let filteredPosts;\r\n        const { dispatch } = this.props\r\n        if (category === 'all' || !category) {\r\n            dispatch(ActionCreator.updateList(originalPosts));\r\n        } else {\r\n            filteredPosts = originalPosts.filter((item) => item.category === category);\r\n            dispatch(ActionCreator.updateList(filteredPosts));\r\n        }\r\n        dispatch(ActionCreator.selectCategory(category));\r\n    }\r\n\r\n    render() {\r\n        let { categories } = this.props;\r\n        const { category } = this.props.match.params;\r\n        return (\r\n            <div id=\"categories-list\" className=\"carousel slide\" data-ride=\"carousel\">\r\n\r\n                <div className=\"carousel-wrapper\">\r\n                    <h2>Categories</h2>\r\n                    <ol className=\"carousel-indicators\">\r\n                        {category === undefined ?\r\n                            <span className=\"active\"> All </span> :\r\n\r\n                            <Link to=\"/\" >\r\n                                <span onClick={() => { this.filter('all') }}> All </span>\r\n                            </Link>\r\n                        }\r\n                        {categories && categories.map((cat) => (\r\n\r\n                            category === cat.path ?\r\n                                <Link key={cat.path} to={`/${cat.path}`} >\r\n                                    <span className=\"active\" onClick={() => { this.filter(cat.path) }}> {cat.name} </span>\r\n                                </Link>\r\n                                :\r\n                                <Link key={cat.path} to={`/${cat.path}`} >\r\n                                    <span onClick={() => { this.filter(cat.path) }}> {cat.name} </span>\r\n                                </Link>\r\n\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    categories: state.categories.items,\r\n    originalPosts: state.posts.originalList\r\n}))(Header)\r\n","import ActionCreator from './actionCreators';\r\nimport { API_ENDPOINT } from '../config/config';\r\nimport axios from \"axios\";\r\nimport token from '../config/config';\r\n\r\nexport default function receiveInitialData(category) {\r\n    return (dispatch) => {\r\n        return axios.get(API_ENDPOINT.READABLE_STARTER + '/posts', { headers: { \"Authorization\": token } })\r\n            .then((res) => {\r\n                dispatch(ActionCreator.initialData(res.data, category));\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error on getting the data \" + err)\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loader\"></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react';\r\nimport './index.css';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './voteStyle.css';\r\n\r\nlet postDate = (timestamp) => {\r\n    return moment(timestamp).format('DD/MM/YY HH:mm:ss');\r\n}\r\n\r\nexport default function List(props) {\r\n    if (props.type === \"post\") {\r\n        return (\r\n            <React.Fragment>\r\n                {props.items.length === 0 &&\r\n                <p>Empty list</p>}\r\n                {props.items && props.items.map((post) => (\r\n                    <div key={post.id} className=\"question\" data-color={props.color(post.voteScore)}>\r\n                        <div className=\"votes\">\r\n                            <div className=\"upvote\" onClick={() => props.vote(post.id, 'upVote')}></div>\r\n                            <div className=\"number-of-votes\">{post.voteScore}</div>\r\n                            <div className=\"downvote\" onClick={() => props.vote(post.id, 'downVote')}></div>\r\n                        </div>\r\n\r\n                        <div className=\"question-and-answer\">\r\n                            <Link to={process.env.PUBLIC_URL + '/' + post.category + '/' + post.id} >\r\n                                <h2>{post.title}</h2>\r\n                            </Link>\r\n\r\n                            <p className=\"author\">{post.author} - {postDate(post.timestamp)}</p>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <div className=\"social\">\r\n                            <div className=\"post-comments\">{post.commentCount}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                {props.items && props.items.map((item, index) => (\r\n                    <li key={index}>\r\n                        <div className={`user-comment ${item.voteScore > 2 ? style.green : item.voteScore >= 0 && item.voteScore <= 2 ? style.yellow : style.red}`}>\r\n                            <div className=\"comment-votes\">\r\n                                <div className=\"upvote\" onClick={() => props.vote(item.id, 'upVote')}></div>\r\n                                <div className=\"number-of-votes\">{item.voteScore}</div>\r\n                                <div className=\"downvote\" onClick={() => props.vote(item.id, 'downVote')}></div>\r\n                            </div>\r\n                            <img src={\"https://cdn1.iconfinder.com/data/icons/flat-business-icons/128/user-32.png\"} alt=\"\" />\r\n                            <header>\r\n                                <a className=\"name\">{item.author}</a>\r\n                                <span>{postDate(item.timestamp)}</span>\r\n                            </header>\r\n                            <div className=\"content\">\r\n                                <p>{item.body}</p>\r\n                            </div>\r\n                            <a className=\"edit\" onClick={() => { props.editComment(item) }}>edit</a>\r\n                            <a className=\"delete\" onClick={() => { props.onDeleteComment(item) }}>delete</a>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n\r\n                {props.items.length === 0 &&\r\n                    <p>There is not comments, be the first to comment.</p>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}","import axios from \"axios\";\r\nimport ActionCreator from './actionCreators';\r\nimport token from '../config/config';\r\nimport { API_ENDPOINT } from '../config/config';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\nconst options = { headers: { \"Authorization\": token } };\r\n\r\n\r\nexport function postVote(postId, vote) {\r\n    return (dispatch) => {\r\n        //that aims to avoid an if/else statement\r\n        dispatch(ActionCreator[vote](postId));\r\n\r\n        return axios.post(\r\n            API_ENDPOINT.READABLE_STARTER + '/posts/' + postId,\r\n            { \"option\": vote },\r\n            options).catch((err) => alert('There was an error, the data is inconsistent, refresh the page and try again. ' + err))\r\n    }\r\n}\r\n\r\nexport function addPost(values, history) {\r\n    values['id'] = uuidv4();\r\n    values['timestamp'] = new Date().getTime();\r\n\r\n    return (dispatch) => {\r\n        dispatch(ActionCreator.requestData());\r\n        return axios.post(API_ENDPOINT.READABLE_STARTER + '/posts',\r\n            values,\r\n            options)\r\n            .then((res) => {\r\n                dispatch(ActionCreator.addPost(res.data))\r\n                dispatch(ActionCreator.dataReceived());\r\n                history.push('/' + res.data.category + '/' + res.data.id);\r\n            }).catch((err) => alert('There was an error on create a post, the data is inconsistent, refresh and try again. ' + err))\r\n    }\r\n}\r\n\r\nexport function editPost(values, id, history) {\r\n\r\n    return (dispatch) => {\r\n        dispatch(ActionCreator.editPost(values, id));\r\n        axios.put(API_ENDPOINT.READABLE_STARTER + '/posts/' + id, values, options)\r\n            .catch((err) => {\r\n                alert('There was an error on edit a post, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\nexport function deletePost(id) {\r\n    return (dispatch) => {\r\n        //remove from state\r\n        dispatch(ActionCreator.deletePost(id));\r\n        axios.delete(API_ENDPOINT.READABLE_STARTER + '/posts/' + id, options)\r\n            .catch((err) => {\r\n                alert('There was an error on delete a post, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\nexport function selectPost(id) {\r\n    return (dispatch) => {\r\n        dispatch(ActionCreator.requestData());\r\n        axios.get(API_ENDPOINT.READABLE_STARTER + '/posts/' + id, options)\r\n            .then((res) => {\r\n                dispatch(ActionCreator.selectPost(res.data));\r\n            })\r\n            .catch((err) => {\r\n                alert('There was an error on selectPost a post, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Modal from 'react-bootstrap/lib/Modal';\r\nimport serializeForm from 'form-serialize';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, editPost } from '../../actions/post';\r\nimport { withRouter } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ModalPost extends Component {\r\n  static propTypes = {\r\n    post: PropTypes.object,\r\n    showModal: PropTypes.bool,\r\n    categorie: PropTypes.array,\r\n    editing: PropTypes.bool,\r\n    selectedPost: PropTypes.object.isRequired\r\n  }\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleHide = this.handleHide.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n      showAlert: false,\r\n      title: (props.post && (props.post.title || '')) || '',\r\n      body: (props.post && (props.post.body || '')) || '',\r\n      author: (props.post && (props.post.author || '')) || '',\r\n      category: (props.post && (props.post.category || '')) || ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var { showModal } = this.props;\r\n    if (showModal) {\r\n      this.handleShow();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Handle the Input component value change\r\n   * @param {object} event - The event\r\n   */\r\n  handleTitleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n\r\n  /**\r\n   * @description Handle the textarea component value change\r\n   * @param {object} event - The event\r\n   */\r\n  handleBodyChange(event) {\r\n    this.setState({ body: event.target.value });\r\n  }\r\n  /**\r\n   * @description Handle the Input component value change\r\n   * @param {object} event - The event\r\n   */\r\n  handleAuthorChange(event) {\r\n    this.setState({ author: event.target.value });\r\n  }\r\n  /**\r\n   * @description Handle the Select component value change\r\n   * @param {object} event - The event\r\n   */\r\n  handleCategoryChange(event) {\r\n    this.setState({ category: event.target.value });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  handleHide() {\r\n    let { cancelEdit } = this.props;\r\n    this.setState({ show: false });\r\n    if (cancelEdit) {\r\n      cancelEdit();\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const { dispatch, history, editing, selectedPost } = this.props;\r\n    e.preventDefault()\r\n    const values = serializeForm(e.target, { hash: true })\r\n\r\n    if (editing) {\r\n      dispatch(editPost(values, selectedPost.id, history));\r\n      this.handleHide();\r\n    } else {\r\n      dispatch(addPost(values, history));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let { categories, editing } = this.props;\r\n    const { title, body, author, category } = this.state\r\n    const disabled = _.isEmpty(title) || _.isEmpty(category) || _.isEmpty(body) || _.isEmpty(author);\r\n    return (\r\n\r\n\r\n      <React.Fragment>\r\n        {editing !== true && <button onClick={this.handleShow}>ADD</button>}\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleHide}\r\n          dialogClassName=\"custom-modal\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-lg\">\r\n              {editing === true ? 'Edit post' : 'New post'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={this.handleSubmit} >\r\n              <div className='create-contact-details'>\r\n                <input type='text' name='title' placeholder='Title' value={title} onChange={(event) => this.handleTitleChange(event)} />\r\n                <textarea type='text' name='body' placeholder='Body' value={body} onChange={(event) => this.handleBodyChange(event)} />\r\n                <input className=\"author\" disabled={editing} type='text' name='author' placeholder='Author' value={author} onChange={(event) => this.handleAuthorChange(event)} />\r\n                <select disabled={editing} name=\"category\" value={category} onChange={(event) => this.handleCategoryChange(event)}>\r\n                  <option>Category</option>\r\n                  {categories && categories.map((cat) => (\r\n                    <option key={cat.name} value={cat.name}>{cat.name}</option>\r\n                  ))}\r\n\r\n                </select>\r\n                <button type=\"submit\" disabled={disabled}>Submit Post</button>&nbsp;\r\n                <button type=\"reset\" onClick={this.handleHide}>Cancel</button>\r\n              </div>\r\n            </form>\r\n\r\n\r\n          </Modal.Body>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect((state) => ({\r\n  categories: state.categories.items,\r\n  selectedPost: state.posts.selectedPost || {}\r\n}))(ModalPost))\r\n","export function defineColor(votes) {\r\n    if (votes > 2) {\r\n        return 'green';\r\n    } else if (votes >= 0 && votes <= 2) {\r\n        return 'yellow';\r\n    } else {\r\n        return 'red';\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Loading from '../loading/index';\r\nimport List from '../list/index';\r\nimport { postVote } from '../../actions/post';\r\nimport { connect } from 'react-redux';\r\nimport ActionCreator from '../../actions/actionCreators';\r\nimport ModalPost from '../modalPost/index';\r\nimport { defineColor } from '../../util/index';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Posts extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object,\r\n        isLoading: PropTypes.bool.isRequired\r\n    }\r\n\r\n    state = {\r\n        sortByDesc: 'Sort by',\r\n        searchValue: '',\r\n\r\n    }\r\n\r\n    selectFilter = (filter) => {\r\n        this.setState(() => ({ sortByDesc: filter }));\r\n        let { dispatch } = this.props;\r\n\r\n        dispatch(ActionCreator.sortPost(filter));\r\n    }\r\n\r\n    voteItem = (postId, vote) => {\r\n        let { dispatch } = this.props;\r\n        dispatch(postVote(postId, vote));\r\n    }\r\n\r\n    filterList = (event) => {\r\n        let { dispatch } = this.props;\r\n        var updatedList = this.props.originalPosts;\r\n\r\n        this.setState({\r\n            searchValue: event.target.value\r\n        });\r\n\r\n        updatedList = updatedList.filter(function (item) {\r\n            return item.title.toLowerCase().search(\r\n                event.target.value.toLowerCase()) !== -1;\r\n        });\r\n\r\n        dispatch(ActionCreator.updateList(updatedList));\r\n    }\r\n\r\n    resetFilter = () => {\r\n        let { dispatch } = this.props;\r\n        this.setState({\r\n            searchValue: ''\r\n        });\r\n\r\n        dispatch(ActionCreator.updateList(this.props.originalPosts));\r\n    }\r\n\r\n    render() {\r\n        const { sortByDesc } = this.state;\r\n        let { posts, isLoading } = this.props;\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div id=\"container\">\r\n                    <div className=\"search-area\">\r\n                        <div className=\"input-wrapper\">\r\n                            <i className=\"fa fa-search\"></i>\r\n                            <input value={this.state.searchValue} type=\"text\" onChange={this.filterList} placeholder=\"Have a question? Search for post by keywords\" />\r\n                        </div>\r\n                        <button onClick={this.resetFilter}>Reset</button>\r\n                        <ModalPost showModal={false}/>\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"dropbtn\">{sortByDesc}<span className=\"caret\"></span></button>\r\n                            <div className=\"dropdown-content\">\r\n                                <a href=\"#\" onClick={() => this.selectFilter('Date')}>Date</a>\r\n                                <a href=\"#\" onClick={() => this.selectFilter('Vote')}>Vote</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isLoading === true ?\r\n                        <Loading /> :\r\n                        <List\r\n                            items={posts}\r\n                            type=\"post\"\r\n                            vote={this.voteItem}\r\n                            color={defineColor}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    posts: state.posts.items,\r\n    originalPosts: state.posts.originalList,\r\n    isLoading: state.loading.isLoading\r\n}))(Posts)\r\n","import axios from \"axios\";\r\nimport ActionCreator from './actionCreators';\r\nimport token from '../config/config';\r\nimport { API_ENDPOINT } from '../config/config';\r\n\r\nconst options = { headers: { \"Authorization\": token } };\r\n\r\nexport function getComments(postId) {\r\n    return (dispatch) => {\r\n        dispatch(ActionCreator.requestData());\r\n        axios.get(API_ENDPOINT.READABLE_STARTER + '/posts/' + postId + \"/comments\", options)\r\n            .then((res) => {\r\n                dispatch(ActionCreator.getComments(res.data));\r\n                dispatch(ActionCreator.dataReceived());\r\n            })\r\n            .catch((err) => {\r\n                alert('There was an error on getComments, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function editComment(commentId, values) {\r\n    return (dispatch) => {\r\n        dispatch(ActionCreator.editComment(commentId, values));\r\n        axios.put(API_ENDPOINT.READABLE_STARTER + '/comments/' + commentId, values, options)\r\n            .catch((err) => {\r\n                alert('There was an error on editComment, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\nexport function newComment(values) {\r\n    //if there is no author, add ananymous value\r\n    if (!values.author) {\r\n        values['author'] = 'anonymous'\r\n    }\r\n    return (dispatch) => {\r\n        axios.post(API_ENDPOINT.READABLE_STARTER + '/comments', values, options)\r\n            .then((res) => {\r\n                dispatch(ActionCreator.addComment(res.data));\r\n            })\r\n            .catch((err) => {\r\n                alert('There was an error on newComment, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\nexport function deleteComment(comment) {\r\n    return (dispatch) => {\r\n        //remove from state\r\n        dispatch(ActionCreator.deleteComment(comment));\r\n        axios.delete(API_ENDPOINT.READABLE_STARTER + '/comments/' + comment.id, options)\r\n            .catch((err) => {\r\n                alert('There was an error on delete a comment, the data is inconsistent, refresh and try again. ' + err)\r\n            });\r\n    }\r\n}\r\n\r\nexport function commentVote(comment, vote) {\r\n    return (dispatch) => {\r\n        //that aims to avoid an if/else statement\r\n        dispatch(ActionCreator[vote](comment));\r\n\r\n        return axios.post(\r\n            API_ENDPOINT.READABLE_STARTER + '/comments/' + comment,\r\n            { \"option\": vote },\r\n            options)\r\n            .catch((err) => alert('There was an error, the data is inconsistent, refresh the page and try again. ' + err))\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport { connect } from 'react-redux';\r\nimport { editComment, newComment } from '../../actions/comment';\r\nimport serializeForm from 'form-serialize';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nclass CommentForm extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        edititngComment: PropTypes.bool,\r\n        selectedPost: PropTypes.object\r\n    }\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            body: (props.comment && (props.comment.body || '')) || '',\r\n            author: (props.comment && (props.comment.author || '')) || ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.clearForm = this.clearForm.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            body: (props.comment && (props.comment.body || '')) || '',\r\n            author: (props.comment && (props.comment.author || '')) || ''\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description Handle the textarea component value change\r\n     * @param {object} event - The event\r\n     */\r\n    handleBodyChange(event) {\r\n        this.setState({ body: event.target.value });\r\n    }\r\n\r\n    /**\r\n     * @description Handle the Input component value change\r\n     * @param {object} event - The event\r\n     */\r\n    handleAuthorChange(event) {\r\n        this.setState({ author: event.target.value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        const { dispatch, edititngComment, comment, selectedPost } = this.props;\r\n        e.preventDefault()\r\n        const values = serializeForm(e.target, { hash: true })\r\n        values['timestamp'] = new Date().getTime();\r\n\r\n        if (edititngComment) {\r\n            dispatch(editComment(comment.id, values));\r\n        } else {\r\n            values['id'] = uuidv4();\r\n            values['parentId'] = selectedPost.id;\r\n            dispatch(newComment(values));\r\n        }\r\n\r\n        this.clearForm();\r\n    }\r\n\r\n    clearForm() {\r\n        let { cancelCommentEdit } = this.props;\r\n\r\n        this.setState({\r\n            body: '',\r\n            author: ''\r\n        });\r\n\r\n        cancelCommentEdit();\r\n    }\r\n\r\n    render() {\r\n        let { edititngComment } = this.props;\r\n        let { body, author } = this.state;\r\n        const disabled = _.isEmpty(body) || _.isEmpty(author);\r\n        return (\r\n            <div id=\"comment-form\" >\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className='create-comment'>\r\n                        <textarea type='text' name='body' placeholder='Comment body' value={body} onChange={(event) => this.handleBodyChange(event)} />\r\n                        <input className=\"author\" disabled={edititngComment} type='text' name='author' placeholder='Author' value={author} onChange={(event) => this.handleAuthorChange(event)} />\r\n                        <br />\r\n                        <button type=\"submit\" disabled={disabled}>Submit comment</button>&nbsp;\r\n                        <button type=\"button\" onClick={this.clearForm}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    selectedPost: state.posts.selectedPost || {}\r\n}))(CommentForm)\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport style from './voteStyle.css';\r\nimport { selectPost, deletePost } from '../../actions/post';\r\nimport { getComments, deleteComment, commentVote } from '../../actions/comment';\r\nimport { connect } from 'react-redux';\r\nimport ActionCreator from '../../actions/actionCreators';\r\nimport Loading from '../loading/index';\r\nimport moment from 'moment';\r\nimport { postVote } from '../../actions/post';\r\nimport ModalPost from '../modalPost/index';\r\nimport CommentForm from '../commentForm/index';\r\nimport List from '../list/index';\r\nimport { defineColor } from '../../util/index';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PostsPage extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object.isRequired,\r\n        comments: PropTypes.array.isRequired,\r\n        isLoading: PropTypes.bool.isRequired\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editing: false,\r\n            hideComment: false,\r\n            labelHideComment: 'Hide Comments',\r\n            commentBeingEdited: {},\r\n            edititngComment: false\r\n        };\r\n\r\n        this.toggleComments = this.toggleComments.bind(this);\r\n        this.setEditComment = this.setEditComment.bind(this);\r\n        this.commentVote = this.commentVote.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { post_id } = this.props.match.params\r\n        const { dispatch } = this.props\r\n\r\n        dispatch(selectPost(post_id));\r\n        dispatch(getComments(post_id));\r\n    }\r\n\r\n    toggleComments() {\r\n        this.setState((state) => ({\r\n            hideComment: !state.hideComment,\r\n            labelHideComment: !state.hideComment === true ? \"Show Comments\" : \"Hide Comments\"\r\n        }))\r\n    }\r\n\r\n    vote = (postId, vote) => {\r\n        let { dispatch } = this.props;\r\n        dispatch(postVote(postId, vote));\r\n        dispatch(ActionCreator.voteSelectedPost(vote));\r\n    }\r\n\r\n    /**\r\n     * @description Handle the comment vote (upvote and downvote)\r\n     * @param {object} postId - The comment id\r\n     * @param {object} vote - The vote\r\n     */\r\n    commentVote(commentId, vote) {\r\n        let { dispatch } = this.props;\r\n\r\n        dispatch(commentVote(commentId, vote));\r\n    }\r\n\r\n    postDate = (timestamp) => {\r\n        return moment(timestamp).format('YY/MM/DD HH:mm:ss');\r\n    }\r\n\r\n    deletePost = (id) => {\r\n        const { dispatch } = this.props\r\n\r\n        //api call\r\n        dispatch(deletePost(id));\r\n    }\r\n\r\n    editPost = () => {\r\n        this.setState({\r\n            editing: true\r\n        });\r\n\r\n    }\r\n\r\n    cancelEdit = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n    }\r\n\r\n    setEditComment = (comment) => {\r\n        this.setState({\r\n            commentBeingEdited: comment,\r\n            edititngComment: true\r\n        })\r\n    }\r\n\r\n    cancelCommentEdit = () => {\r\n        this.setState({\r\n            commentBeingEdited: null,\r\n            edititngComment: false\r\n        })\r\n    }\r\n\r\n    deleteComment = (comment) => {\r\n        const { dispatch } = this.props\r\n\r\n        //api call\r\n        dispatch(deleteComment(comment));\r\n    }\r\n\r\n    render() {\r\n        let { isLoading, post, comments } = this.props;\r\n        let { hideComment, labelHideComment, commentBeingEdited, edititngComment } = this.state;\r\n\r\n        if (this.state.editing) {\r\n\r\n            return (\r\n                <ModalPost post={post} showModal={true} editing={true} cancelEdit={this.cancelEdit} />\r\n            )\r\n        }\r\n\r\n        if (!post.id && !isLoading) {\r\n            return (\r\n                <div className=\"not-found\">\r\n                    <h1>404</h1>\r\n                    <h2>Item Not Found</h2>\r\n\r\n                    <p>Sorry, I couldn't find the post you were looking for.</p>\r\n\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            isLoading === true ?\r\n                <Loading />\r\n                :\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <div id=\"post\" className={post.voteScore > 2 ? style.green : post.voteScore >= 0 && post.voteScore <= 2 ? style.yellow : style.red}>\r\n                            <div className=\"votes\">\r\n                                <div className=\"upvote\" onClick={() => this.vote(post.id, 'upVote')}></div>\r\n                                <div className=\"number-of-votes\">{post.voteScore}</div>\r\n                                <div className=\"downvote\" onClick={() => this.vote(post.id, 'downVote')}></div>\r\n                            </div>\r\n                            <header>\r\n                                <h2>{post.title}</h2>\r\n                                <img src={\"https://cdn1.iconfinder.com/data/icons/flat-business-icons/128/user-64.png\"} alt=\"\" />\r\n                                <p>\r\n                                    <a href=\"#\" className=\"name\">{post.author}</a>\r\n                                    &nbsp;wrote a post to the category\r\n                                    &nbsp;<a href=\"#\">{post.category}</a>.\r\n                                    <span>{this.postDate(post.timestamp)}</span>\r\n                                </p>\r\n                                <div className=\"option\">\r\n                                    <ul>\r\n                                        <li key=\"edit\" onClick={() => { this.editPost() }}><a href=\"#edit\">Edit</a></li>\r\n                                        <li key=\"delete\" onClick={() => this.deletePost(post.id)}><a href=\"#delete\" >Delete</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </header>\r\n\r\n                            <div className=\"content\">\r\n                                <p>{post.body}</p>\r\n                                <div id=\"social\">\r\n                                    <div className=\"post-comments\">{post.commentCount}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"hide-comments\">\r\n                                <input type=\"checkbox\" value=\"\" id=\"hide-button\" name=\"check\" />\r\n                                <label className=\"button\" onClick={this.toggleComments}>{labelHideComment}</label>\r\n                            </div>\r\n\r\n                            <div className=\"comments\">\r\n                                <CommentForm\r\n                                    comment={commentBeingEdited}\r\n                                    edititngComment={edititngComment}\r\n                                    cancelCommentEdit={this.cancelCommentEdit} />\r\n                                <ul>\r\n                                    {!hideComment &&\r\n                                        <List\r\n                                            items={comments}\r\n                                            type=\"comment\"\r\n                                            vote={this.commentVote}\r\n                                            color={defineColor}\r\n                                            editComment={this.setEditComment}\r\n                                            onDeleteComment={this.deleteComment}\r\n                                        />\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({\r\n    isLoading: state.loading.isLoading,\r\n    post: state.posts.selectedPost || {},\r\n    comments: state.comment.items || []\r\n}))(PostsPage)\r\n","import React, { Component } from 'react';\r\nimport Header from './header/index'\r\nimport Posts from './posts/index'\r\nimport PostsPage from './postPage/index'\r\nimport { Route } from 'react-router-dom';\r\nimport './index.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <a href=\"http://github.com/guilhermemalfatti\" className=\"float-github\" target=\"_blank\">\r\n          <i className=\"fa fa-github\"></i>\r\n        </a>\r\n        <a href=\"http://www.linkedin.com/in/guilherme-malfatti-b2683966\" className=\"float-linkedin\" target=\"_blank\">\r\n          <i className=\"fa fa-linkedin\"></i>\r\n        </a>\r\n        <a href={process.env.PUBLIC_URL + '/'} className=\"float-home\">\r\n          <i className=\"fa fa-home\"></i>\r\n        </a>\r\n\r\n        <Route path={process.env.PUBLIC_URL + '/:category'} component={Header} />\r\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Header} />\r\n\r\n        <Route path={process.env.PUBLIC_URL + '/:category/:post_id'} component={PostsPage} />\r\n\r\n        <Route exact path={process.env.PUBLIC_URL + '/'} component={Posts} />\r\n        <Route exact path={process.env.PUBLIC_URL + '/:category'} component={Posts} />\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actions/actionCreators'\r\n\r\nconst INITIAL_STATE = {\r\n    items: []\r\n};\r\n\r\nconst getComments = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        items: action.comments\r\n    }\r\n}\r\n\r\nconst addComment = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        items: state.items.concat(action.comment)\r\n    }\r\n}\r\n\r\nconst editComment = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        items: state.items.map((item) => {\r\n            if (item.id === action.commentId) {\r\n                item.body = action.values.body;\r\n                item.timestamp = action.values.timestamp;\r\n            }\r\n            return item;\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteComment = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.comment.id)\r\n    }\r\n}\r\n\r\nconst downVote = (state = INITIAL_STATE, action) => {\r\n    return {\r\n      ...state,\r\n      items: state.items.map((item) => {\r\n        if (item.id === action.id) {\r\n          item.voteScore -= 1;\r\n        }\r\n        return item;\r\n      })\r\n    }\r\n  }\r\n\r\n  const upVote = (state = INITIAL_STATE, action) => {\r\n    return {\r\n      ...state,\r\n      items: state.items.map((item) => {\r\n        if (item.id === action.id) {\r\n          item.voteScore += 1;\r\n        }\r\n        return item;\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\nconst HANDLERS = {\r\n    [Types.GET_COMMENTS]: getComments,\r\n    [Types.ADD_COMMENT]: addComment,\r\n    [Types.EDIT_COMMENT]: editComment,\r\n    [Types.DELETE_COMMENT]: deleteComment,\r\n    [Types.DOWN_VOTE]: downVote,\r\n    [Types.UP_VOTE]: upVote,\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)\r\n","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actions/actionCreators'\r\n\r\nconst INITIAL_STATE = {\r\n    isLoading: true\r\n}\r\n\r\nconst loadingOff = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false\r\n    }\r\n}\r\n\r\nconst loadingOn = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: true\r\n    }\r\n}\r\n\r\nconst HANDLERS = {\r\n    [Types.INITIAL_DATA]: loadingOff,\r\n    [Types.REQUEST_DATA]: loadingOn,\r\n    [Types.SELECT_POST]: loadingOff,\r\n    [Types.DATA_RECEIVED]: loadingOff\r\n\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)\r\n","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actions/actionCreators'\r\n\r\nconst INITIAL_STATE = {\r\n    items: [],\r\n    selectedCategory: 'all'\r\n};\r\n\r\nconst receivecategories = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        items: action.categories\r\n    }\r\n}\r\n\r\n\r\nconst selectCategory = (state = INITIAL_STATE, action) => {\r\n    return {\r\n        ...state,\r\n        selectedCategory: action.category\r\n    }\r\n}\r\n\r\nconst HANDLERS = {\r\n    [Types.RECEIVE_CATEGORIES]: receivecategories,\r\n    [Types.SELECT_CATEGORY]: selectCategory\r\n\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)\r\n","import { createReducer } from 'reduxsauce'\r\nimport { Types } from '../actions/actionCreators'\r\n\r\nconst INITIAL_STATE = {\r\n  items: [],\r\n  originalList: [],\r\n  selectedPost: null\r\n};\r\n\r\nconst addPost = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: state.items.concat(action.post),\r\n    originalList: state.originalList.concat(action.post)\r\n  }\r\n}\r\n\r\nconst initialdata = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: action.filter ? action.posts.filter((item) => item.category === action.filter) : action.posts,\r\n    originalList: action.posts\r\n  }\r\n}\r\n\r\nconst downVote = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: state.items.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.voteScore -= 1;\r\n      }\r\n      return item;\r\n    })\r\n  }\r\n}\r\n\r\nconst upVote = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: state.items.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.voteScore += 1;\r\n      }\r\n      return item;\r\n    })\r\n  }\r\n}\r\n\r\nconst sortPost = (state = INITIAL_STATE, action) => {\r\n  if (action.term === 'Date') {\r\n    return {\r\n      ...state,\r\n      items: [].concat(state.items).sort((a, b) => {\r\n        if (a.timestamp < b.timestamp) {\r\n          return 1;\r\n        }\r\n        if (a.timestamp > b.timestamp) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      })\r\n    }\r\n  } else {\r\n    return {\r\n      ...state,\r\n      items: [].concat(state.items).sort((a, b) => {\r\n        if (a.voteScore < b.voteScore) {\r\n          return 1;\r\n        }\r\n        if (a.voteScore > b.voteScore) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst updateList = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: action.posts\r\n  }\r\n}\r\n\r\nconst selectPost = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    selectedPost: action.post\r\n  }\r\n}\r\n\r\nconst voteSelectedPost = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    selectedPost: {\r\n      ...state.selectedPost,\r\n      voteScore: action.vote === 'upVote' ? state.selectedPost.voteScore + 1 : state.selectedPost.voteScore - 1\r\n    }\r\n  }\r\n}\r\n\r\nconst deletePost = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: state.items.filter((item) => item.id !== action.postId),\r\n    originalList: state.originalList.filter((item) => item.id !== action.postId),\r\n    selectedPost: null\r\n  }\r\n}\r\n\r\nconst editPost = (state = INITIAL_STATE, action) => {\r\n  return {\r\n    ...state,\r\n    items: state.items.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.title = action.values.title;\r\n        item.body = action.values.body;\r\n      }\r\n      return item;\r\n    }),\r\n    originalList: state.originalList.map((item) => {\r\n      if (item.id === action.id) {\r\n        item.title = action.values.title;\r\n        item.body = action.values.body;\r\n      }\r\n      return item;\r\n    }),\r\n    selectedPost: {\r\n      ...state.selectedPost,\r\n      title: action.values.title,\r\n      body: action.values.body\r\n    }\r\n  }\r\n}\r\n\r\nconst addComment = (state = INITIAL_STATE, action) => {\r\n  return {\r\n      ...state,\r\n      items: state.items.map((item) => {\r\n        if (item.id === action.comment.parentId) {\r\n          item.commentCount += 1;\r\n        }\r\n        return item;\r\n      }),\r\n      selectedPost: {\r\n        ...state.selectedPost,\r\n        commentCount: state.selectedPost.commentCount + 1\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\nconst deleteComment = (state = INITIAL_STATE, action) => {\r\n  return {\r\n      ...state,\r\n      items: state.items.map((item) => {\r\n        if (item.id === action.comment.parentId) {\r\n          item.commentCount -= 1;\r\n        }\r\n        return item;\r\n      }),\r\n      selectedPost: {\r\n        ...state.selectedPost,\r\n        commentCount: state.selectedPost.commentCount - 1\r\n      }\r\n  }\r\n}\r\n\r\nconst HANDLERS = {\r\n  [Types.ADD_POST]: addPost,\r\n  [Types.INITIAL_DATA]: initialdata,\r\n  [Types.DOWN_VOTE]: downVote,\r\n  [Types.UP_VOTE]: upVote,\r\n  [Types.SORT_POST]: sortPost,\r\n  [Types.UPDATE_LIST]: updateList,\r\n  [Types.SELECT_POST]: selectPost,\r\n  [Types.VOTE_SELECTED_POST]: voteSelectedPost,\r\n  [Types.DELETE_POST]: deletePost,\r\n  [Types.EDIT_POST]: editPost,\r\n  [Types.ADD_COMMENT]: addComment,\r\n  [Types.DELETE_COMMENT]: deleteComment,\r\n}\r\n\r\nexport default createReducer(INITIAL_STATE, HANDLERS)\r\n","import { combineReducers } from 'redux';\r\n\r\nimport comment from './comments';\r\nimport loading from './loading';\r\nimport categories from './categories';\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n    categories,\r\n    comment,\r\n    loading,\r\n    posts\r\n})","//import checker from './checker';\r\nimport thunk from 'redux-thunk';\r\nimport { applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\n export default applyMiddleware(\r\n  thunk,\r\n  logger\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers';\nimport middleware from './middleware';\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer,\n    composeEnhancers(\n        middleware\n    ))\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n//https://github.com/udacity/reactnd-redux-todos-goals/commit/1177c07de724399ba9f8b1573c4c9711caa23daa\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"_17yig069KFr3Y3la0Xipj5\",\"yellow\":\"_1ASXIa_rTZ_2tCLCsuUA0E\",\"green\":\"_5tDM9AFoC5o3Ht-SYWg8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"nD2A4coNMt7vIA6VOHfX_\",\"yellow\":\"_1eKtZhKiBA0nXeZQagowp_\",\"green\":\"_1NP4-WdwsVj4aS71LxX1qN\"};"],"sourceRoot":""}